---
# Source: karpenter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: karpenter
  namespace: karpenter
  labels:
    helm.sh/chart: karpenter-v0.32.10
    app.kubernetes.io/name: karpenter
    app.kubernetes.io/instance: karpenter
    app.kubernetes.io/version: "0.32.10"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: karpenter
      app.kubernetes.io/instance: karpenter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: karpenter
        app.kubernetes.io/instance: karpenter
      annotations:
        checksum/settings: 9ac511cbfbef073098a423d1c354d5bd4495e1dcbd0e0fe82cbf7a69fd54c9be
    spec:
      serviceAccountName: karpenter
      priorityClassName: "system-cluster-critical"
      dnsPolicy: Default
      containers:
        - name: controller
          securityContext:
            runAsUser: 65536
            runAsGroup: 65536
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          image: public.ecr.aws/karpenter/controller:v0.32.10@sha256:6aa27692a28a5eb8aaaef9618e0e31c2d0044b535b589227b0be687f7f9098e4
          imagePullPolicy: IfNotPresent
          env:
            - name: KUBERNETES_MIN_VERSION
              value: "1.19.0-0"
            - name: KARPENTER_SERVICE
              value: karpenter
            - name: WEBHOOK_PORT
              value: "8443"
            - name: WEBHOOK_METRICS_PORT
              value: "8001"
            - name: LOG_LEVEL
              value: "debug"
            - name: METRICS_PORT
              value: "8000"
            - name: HEALTH_PROBE_PORT
              value: "8081"
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MEMORY_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: controller
                  divisor: "0"
                  resource: limits.memory
          ports:
            - name: http-metrics
              containerPort: 8000
              protocol: TCP
            - name: webhook-metrics
              containerPort: 8001
              protocol: TCP
            - name: https-webhook
              containerPort: 8443
              protocol: TCP
            - name: http
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 30
            timeoutSeconds: 30
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            initialDelaySeconds: 5
            timeoutSeconds: 30
            httpGet:
              path: /readyz
              port: http
          resources:
            limits:
              cpu: 1
              memory: 2Gi
            requests:
              cpu: 1
              memory: 2Gi
          volumeMounts:
            - name: config-logging
              mountPath: /etc/karpenter/logging
      nodeSelector:
        eks.amazonaws.com/nodegroup: karpenter
      # The template below patches the .Values.affinity to add a default label selector where not specificed
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: karpenter.sh/provisioner-name
                    operator: DoesNotExist
                  - key: karpenter.sh/nodepool
                    operator: DoesNotExist
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: karpenter
                  app.kubernetes.io/name: karpenter
              topologyKey: kubernetes.io/hostname
      # The template below patches the .Values.topologySpreadConstraints to add a default label selector where not specificed
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/instance: karpenter
              app.kubernetes.io/name: karpenter
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
      volumes:
        - name: config-logging
          configMap:
            name: config-logging